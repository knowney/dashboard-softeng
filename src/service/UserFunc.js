import {
  collection,
  getDocs,
  doc,
  deleteDoc,
  updateDoc,
  setDoc,
} from "firebase/firestore";
import { db } from "../../src/service/firebaseDb"; // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Firestore instance
import { deleteUser as deleteAuthUser, getAuth } from "firebase/auth";
// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Users ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
export const fetchUsers = async () => {
  try {
    const querySnapshot = await getDocs(collection(db, "users"));
    const usersList = querySnapshot.docs.map((doc) => ({
      key: doc.id,
      uid: doc.id,
      ...doc.data(),
    }));
    return usersList;
  } catch (error) {
    console.error("Error fetching users:", error);
    return [];
  }
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
export const deleteUser = async (uid) => {
  try {
    console.log("üóë ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:", uid);

    // ‚úÖ ‡∏•‡∏ö‡∏à‡∏≤‡∏Å Firestore
    await deleteDoc(doc(db, "users", uid));
    console.log("‚úÖ ‡∏•‡∏ö‡∏à‡∏≤‡∏Å Firestore ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");

    // ‚úÖ ‡∏•‡∏ö‡∏à‡∏≤‡∏Å Firebase Authentication (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)
    const auth = getAuth();
    const user = auth.currentUser;
    if (user && user.uid === uid) {
      await deleteAuthUser(user);
      console.log("‚úÖ ‡∏•‡∏ö‡∏à‡∏≤‡∏Å Firebase Authentication ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    }

    return true;
  } catch (error) {
    console.error("‚ùå Error deleting user:", error);
    return false;
  }
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
export const updateUser = async (uid, updatedData) => {
  try {
    await updateDoc(doc(db, "users", uid), updatedData);
    console.log("Updated user:", uid);
    return true;
  } catch (error) {
    console.error("Error updating user:", error);
    return false;
  }
};

export const toggleUserStatus = async (uid, currentStatus) => {
  try {
    const newStatus = currentStatus === "active" ? "disable" : "active"; // ‚úÖ ‡∏™‡∏•‡∏±‡∏ö‡∏Ñ‡πà‡∏≤
    await updateDoc(doc(db, "users", uid), { status: newStatus });
    console.log(`User ${uid} status updated to: ${newStatus}`);
    return newStatus; // ‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
  } catch (error) {
    console.error("Error updating user status:", error);
    return null;
  }
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
export const addUser = async (userData) => {
  try {
    if (!userData.uid) {
      throw new Error("UID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!"); // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ UID
    }

    await setDoc(doc(db, "users", userData.uid), userData);
    console.log("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡∏á Firestore ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", userData.uid);

    return { uid: userData.uid, ...userData };
  } catch (error) {
    console.error("‚ùå Error adding user:", error);
    return null;
  }
};
