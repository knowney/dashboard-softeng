import { auth, db } from "./firebaseDb";
import {
  createUserWithEmailAndPassword,
  signInWithEmailAndPassword,
  sendPasswordResetEmail,
} from "firebase/auth";
import { getDoc, setDoc, doc, collection } from "firebase/firestore";
import { message } from "antd";
import { signOut } from "firebase/auth";

export const handleAuthAction = async (
  values,
  isRegister,
  navigate,
  setLoading
) => {
  setLoading(true);
  try {
    let userCredential;
    if (isRegister) {
      userCredential = await createUserWithEmailAndPassword(
        auth,
        values.email,
        values.password
      );
      await setDoc(doc(collection(db, "users"), userCredential.user.uid), {
        name: values.name,
        lastName: values.lastName,
        email: values.email,
        uid: userCredential.user.uid,
        role: "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
        status: "active",
        createdAt: new Date(),
      });
    } else {
      userCredential = await signInWithEmailAndPassword(
        auth,
        values.email,
        values.password
      );

      // üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö status ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const userDoc = await getDoc(doc(db, "users", userCredential.user.uid));
      if (userDoc.exists() && userDoc.data().status === "disable") {
        message.error("‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö !");

        // üöÄ ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡∏Å‡πà‡∏≠‡∏ô Redirect
        await signOut(auth);

        setLoading(false);
        setTimeout(() => {
          navigate("/login");
          window.location.reload(); // üîÑ ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Auth State
        }, 1500);
        return;
      }
    }
    message.success(
      `${isRegister ? "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢" : "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö"} !`
    );
    navigate("/");
  } catch (error) {
    message.error(error.message || "‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!");
  }
  setLoading(false);
};

export const handleForgotPassword = async (
  resetEmail,
  setIsModalVisible,
  setResetEmail
) => {
  if (!resetEmail) {
    message.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì");
    return;
  }
  try {
    await sendPasswordResetEmail(auth, resetEmail);
    message.success(
      "‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
    );
    setIsModalVisible(false);
    setResetEmail("");
  } catch (error) {
    message.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
  }
};
